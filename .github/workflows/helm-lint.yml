name: Lint and Test Charts
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Set up podman
        run: |
          source /etc/os-release
          echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Set up oc client
        run: |
          wget https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          sudo tar xzvf oc.tar.gz -C /usr/local/bin
          
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0


      - name: Run chart-testing (list-changed)
        id: list-changed 
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --validate-maintainers false --target-branch ${{ github.event.repository.default_branch }}


      - name: Run a microshift cluster
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          sudo podman run -d --rm --name microshift \
               --privileged -v microshift-data:/var/lib -p 6443:6443 \
               quay.io/microshift/microshift-aio:latest
          # get kubeconfig
          sudo podman exec microshift bash -c \
               'while ! test -f "/var/lib/microshift/resources/kubeadmin/kubeconfig";
               do
                   echo "Waiting for kubeconfig..."
                   sleep 5
               done'
          mkdir ${HOME}/.kube
          sudo podman cp \
               microshift:/var/lib/microshift/resources/kubeadmin/kubeconfig \
               ${HOME}/.kube/config
          sudo chown ${USER} ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          # wait for the cluster to become available
          sleep 10
          kubectl wait --for=condition=available apiservice --all --timeout 300s

      - name: Install RHSI siteconfigOnly
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm upgrade --install --create-namespace --namespace skupper \
               skupper charts/rhsi --set common.siteconfigonly=true

      - name: Install RHSI
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm upgrade --install --create-namespace --namespace skupper \
               skupper charts/rhsi --set common.siteconfigonly=False --debug

            
