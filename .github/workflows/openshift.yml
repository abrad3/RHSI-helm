name: RHSI-Install-demo

env:

  AWS_OPENSHIFT_SERVER: ${{ secrets.AWS_OPENSHIFT_API }}
  AWS_OPENSHIFT_TOKEN: ${{ secrets.AWS_OPENSHIFT_TOKEN }}
  AZURE_OPENSHIFT_SERVER: ${{ secrets.AZURE_OPENSHIFT_API }}
  AZURE_OPENSHIFT_TOKEN: ${{ secrets.AZURE_OPENSHIFT_TOKEN }}
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: ""

  # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
  APP_NAME: ""

  # üñäÔ∏è EDIT with the port your application should be accessible on.
  # If the container image exposes *exactly one* port, this can be left blank.
  # Refer to the 'port' input of https://github.com/redhat-actions/oc-new-app
  APP_PORT: ""

  # üñäÔ∏è EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}

  # üñäÔ∏è EDIT to specify custom tags for the container image, or default tags will be generated below.
  IMAGE_TAGS: ""

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ "main" ]

jobs:
  AWS:
    # üñäÔ∏è Uncomment this if you are using CRDA scan step above
    # needs: crda-scan
    name: Install RHSI on AWS
    runs-on: ubuntu-20.04
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4
              
    - name: Helm tool installer
      uses: Azure/setup-helm@v3

    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to aws OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.AWS_OPENSHIFT_SERVER }}
        openshift_token: ${{ env.AWS_OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        kubeconfig: /tmp/aws

    - name: Install RHSI
      run: |
        oc whoami --show-server
        oc project skupper
        helm upgrade --install --create-namespace --namespace skupper \
               skupper charts/rhsi --set common.siteconfigonly=true
        helm upgrade --install --create-namespace --namespace skupper \
             skupper charts/rhsi --set common.siteconfigonly=false --set flowCollector.enabled=false

  Azure:
    # üñäÔ∏è Uncomment this if you are using CRDA scan step above
    # needs: crda-scan
    name: Install RHSI on Azure
    runs-on: ubuntu-20.04
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4
              
    - name: Helm tool installer
      uses: Azure/setup-helm@v3

    - name: Log in to Azure OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.AZURE_OPENSHIFT_SERVER }}
        openshift_token: ${{ env.AZURE_OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        kubeconfig: /tmp/aws

    - name: Print namespaces on azure
      run: |
        oc whoami --show-server
        oc project skupper
        helm upgrade --install --create-namespace --namespace skupper \
               skupper charts/rhsi --set common.siteconfigonly=true
        helm  upgrade --install --create-namespace --namespace skupper \
             skupper charts/rhsi --set common.siteconfigonly=false --set flowCollector.enabled=false
